<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAO4AAADUCAMAAACs0e/bAAAABGdBTUEAALGPC/xhBQAAADBQTFRFytHi
        ////x87g0NblzNPj/Pz90tjm6Ovy9vf64ubv19zp2t/r3+Pt7/H26ezz4+fw7CMltwAABzNJREFUeF7t
        nYlyqzgQRXGzGLP+/99GEu3EsVmlezHbmZo3qqk8omNBS60FR7d9kL6Q/1IrjeFuaNv28XhUltJSGDJD
        HMeJIYpW0/1XU63lSzVfa/mspK2lw1bVVtbWN4pkHPczg2hteugq6NBaGrSez4q+fZwvn6ato72+VmIO
        rj5Ukqh9a3b9SJ8fqH6iE7Xufmb7JFG8m7oCiKNMS6cgNv+ciJPpZpfugTmZbnHpHpjy0j0wl+6RqS7d
        A3My3ce5EsBz6crJdNuz6Z4pVMn90j0uZ9NtvqP7pbntNXVFoiwriqIsq8ous7i1i2xV89V0JSnrVNee
        /pE2Ky5jSL2GrkRlrXZ91FW80irTGrqS3NVrmPS+yk3N15WkUaVx0moFX77uQ3WmafRvECHrSparyxxy
        XUrmwdWVVkXmwg7SkjN1x8JxPxnXl6mb9PazExRUX6Kul+3tRg3QPN1Yq7+YB9GXp7skJP/nzvOl6frb
        mg6Y5kvSlXkjqSFqmm/K0JVS6+1LyuqAKbqJ1jqAQi8FJn1uAgQiy4cXH6R6LTAM3UKrHAQnPhN0xW98
        8Q4lX8DrSqX1DYTRvAk+VElIl/uKXg+J0UW3LiAsd1R6QSAEXdC9bLJ9/N2c3NC6Mj0PNxf8iCDG6wI6
        XQV/NxN0UZGKkSoQdDG9rgWfKeB1YYGZEasyuK73LMYnuV4SB751M60rgD3oQvKDDrwu/mY+mW7oRMYL
        ewhVsDEkQ7dA68r8Fb9J9qC7dBVshEs3kBKui0uILt1QNq2LTxGqSzeIs+mGLYb9A64rJ9N9nEu3vXSD
        QOrCp+ZMHL10Q0DqwhfFzqbbXLpBIHXbSzcIqbesC98uaHWxIHXhu0E3rqvXhHHpBiFZgVvNvpXo00Vg
        XWRub0jTvNQrY5Acq4tbylawSRFYNzqXLnDlXrl0A7C6wFGV5+GSEcC6KXYQCdfFZviXbhBwXWzKa3WB
        4PtdbFIk2F3DJvKBAY+qwLrAAXMH9sDJ5nWxe3zRutgUwaAXBgHWRe4y6tDrgkDrArfMOdD75sC66EEz
        dgwJ10V3vOiJdbQuODSDZ6vMzaclEMANoBbwOU+4LvYrQ9DHPOG6yD2C+FWTGN66yOaFn+HF6yI3+MJP
        aGf41sXlvPhTUwRd1PFdxnllRuuinl5849oxrpZwoIYahHcrUHRBwUovh4ShC0qL8Hu33ZhPS0AwaRF8
        Y4aBootJixivjeboIuYjU3w35CZbtAQEMmOFTuwdFF3IjBXj0SXpIk4sM95oZAd8WoQS/vCmjMa1IwIt
        IgE8vIQRJE0X0PNSvr3Azj1oEUpw8+LPZVtYusFPLyNQda2gRTBhwZnS6TJ1w94lSHjbn4WnGzQlSQnL
        Brs9VYtw/LN8Sp9rYep6hytKcuDg6nqm+aQ4ZbA3nBYJeOqyntyN6sJPD/3C1fXsi06mS8l0HZvU5b1s
        3M4qaZGA56TGyXQJL/9UqLq+qwm8bwrg6nqOmnd6M59N13NKg9cR2VG8lvDYXs6Hveqai/vAG1XZfRRa
        IuC5MrZLXfHeo8FLAHm6Set5KxtKlq891aVFLGEL+DntKz5Iulpvb7AHTJ6QWjdkFrKD8xUfrJvZXDYQ
        yvQcSRew9YYysW5X6rQIJHhBzEBZASTp+vdBv1DWxOzClRaBIPZVUXJ8ji7g0eUMrSi6iEeXE6s4uoBH
        l9O8nJu5q28ohGBF0QV9MQKheW3NtAgD8+hSVnkJugIYQXbgJ2Btl6FFDALZD6nUZZZAlcG6Et9RTfuk
        Rr6zCqlrGhbSA72TtrBkH6YrkjXohv2jLjBNbJcktRiCxA+eqyN9IJoYoSuCfL3cME24cLCuSNySG/YP
        c0/rr/UkUFdCpld9yMPmZG0nqcXFiJSr3MT/SSvTBfjir8vqdqYxwp64dQ0tL0IidigeI/W8pd12Ai0v
        QBJQFuBN7hW0vHTNSLH7nV/FBK3Fxm62X8szkRj4ytog0nu80Hix7nZkHfmysZbLxLU8A4m/0PNMkJfz
        O6ZFuluUdcxOIBboSrZRWcvMsYd7U7aWR9m0rCVtZwjP1N3sbfzKjBaepSvJpqLxMPmUsNvopeUBJNrC
        oGIu4znxtK5UXxwb+9CMzF1O6Ur2pawnhOH8YUp3Jw/tG7XW/oNR3bBDi19lIF9yS5Na/sB+FHulf71l
        WFeynYWoN3q3kQ7q4l6x9S36lkuHdH0PTWyJHt8B3R0HqRc+n98BXdDy+7dRmz/cm5a0/If7EA7Ax4mV
        Xl3UZoPvM0vXbk85Bu9Pb5+uG2kdg/dN0WL/p5afIHb4bYW3rVk9ui7jPwpvfW9f65ZNXedzSQG4ipGY
        1o0Eil70g+R3933SRxzH9t8/siz7LXxQ6H8N9ie6H7QX0F+h9Ooel0v3yJxSV4NKCHq9jdPpNs29n7Z1
        f7pSP49+qhHKqhyjGEIj7zsaiJ9x22DCuoZ3xZq6P43u7fYDdiBtaIPBI8QAAAAASUVORK5CYII=
</value>
  </data>
</root>